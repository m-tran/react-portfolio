{"version":3,"sources":["components/img/Two.jpg","components/img/divide_event_03.jpg","components/img/logo.png","components/img/two_thumb.gif","components/img/divide_event_03.gif","components/navbar/Navbar.js","pages/main/Main.js","pages/projects/Projects.js","pages/contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","Grid","container","direction","justify","alignItems","item","xs","className","href","src","logo","alt","to","scroll","el","scrollIntoView","behavior","block","Main","useState","isShown","setIsShown","spacing","onMouseEnter","onMouseLeave","Projects","align-items","id","p","pathname","target","twoThumb","e","currentTarget","twoThumbGif","pairThumb","pairThumbGif","Contact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.efb16dd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Two.1bef7664.jpg\";","module.exports = __webpack_public_path__ + \"static/media/divide_event_03.aa619672.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d0645d76.png\";","module.exports = __webpack_public_path__ + \"static/media/two_thumb.1352d451.gif\";","module.exports = __webpack_public_path__ + \"static/media/divide_event_03.323a5f22.gif\";","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport logo from \"../../components/img/logo.png\";\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { Grid } from \"@material-ui/core\";\n\nconst Navbar = () => {\n\n    return (\n        <Router>\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                <Grid item xs={4} className=\"navbar-home\">\n                    <a href=\"/\">\n                        <img className=\"logo\" src={logo} alt=\"logo\" />\n                    </a>\n                </Grid>\n                <Grid container item xs={8} justify=\"flex-end\">\n                    <ul className=\"navbar-links\">\n                        <Link\n                            to=\"/#projects\"\n                            scroll={el => el.scrollIntoView({ behavior: 'instant', block: 'end' })}\n                        >\n                            <li className=\"navbar-link\">projects</li>\n                        </Link>\n                        <Link\n                            to=\"/#contact\"\n                            scroll={el => el.scrollIntoView({ behavior: 'instant', block: 'end' })}\n                        >\n                            <li className=\"navbar-link\">contact</li>\n                        </Link>\n                    </ul>\n                </Grid>\n            </Grid>\n        </Router>\n    )\n}\n\nexport default Navbar;\n","import React, { useState } from 'react';\nimport \"./main.css\";\nimport { Grid } from \"@material-ui/core\";\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst Main = () => {\n    const [isShown, setIsShown] = useState(false);\n\n    return (\n        <Router>\n            <Grid container direction=\"row\" spacing={2} justify=\"center\" className=\"main\">\n                <Grid item xs={10} className=\"main-text\">\n                    <div className=\"name\">\n                        <h1 className=\"name-text\">Hey, I'm Michelle.</h1>\n                        <div className=\"name-color\"></div>\n                        <div className=\"name-color-2\"></div>\n                    </div>\n                    <div className=\"about\">\n                        <h1 className=\"about-text\">I'm a creative designer (who codes) @ <span><a \n                                className=\"two-link\" \n                                href=\"www.twofurnish.com\"\n                                onMouseEnter={() => setIsShown(true)}\n                                onMouseLeave={() => setIsShown(false)}>\n                                    two</a></span> & I make brands come to <span><a \n                                className=\"project\"\n                                href=\"/projects\"\n                                onMouseEnter={() => setIsShown(true)}\n                                onMouseLeave={() => setIsShown(false)}>\n                                    life</a></span>&nbsp;through user and purpose-centered positioning.\n                        </h1>\n                    </div>\n                    <div className=\"scroll-down\">\n                        <Link\n                            to=\"/#projects\"\n                            scroll={el => el.scrollIntoView({ behavior: 'instant', block: 'end' })}\n                        ><h2>&#x21E9;</h2>\n                        </Link>\n                    </div>\n                </Grid>\n                {isShown && (\n                <div className=\"blob\"></div>\n                )}\n            </Grid>\n        </Router>\n    )\n}\n\nexport default Main;\n\n","import React from 'react';\nimport { Link, BrowserRouter as Router } from 'react-router-dom';\nimport \"./projects.css\";\nimport { Grid } from \"@material-ui/core\";\nimport twoThumb from \"../../components/img/Two.jpg\";\nimport twoThumbGif from \"../../components/img/two_thumb.gif\";\nimport pairThumb from \"../../components/img/divide_event_03.jpg\";\nimport pairThumbGif from \"../../components/img/divide_event_03.gif\";\n\nconst Projects = () => {\n\n    return (\n        <Router>\n            <Grid container spacing={2} align-items=\"center\" justify=\"center\" id=\"projects\">\n                <Grid item xs={10} className=\"project-page\">\n                    <div className=\"title\">\n                        <h1>Projects</h1>\n                    </div>\n                </Grid>\n                <Grid item xs={5} p={10}>\n                <Link to={{ pathname:\"http://www.twofurnish.com\" }} target=\"_blank\"><img \n                        className=\"thumb\" \n                        src={twoThumb} \n                        alt=\"two\" \n                        onMouseEnter={e => (e.currentTarget.src=twoThumbGif)}\n                        onMouseLeave={e => (e.currentTarget.src=twoThumb)}/></Link>\n                    <a href=\"www.twofurnish.com\"><h2>two</h2></a>\n                    <p>Marketing, Graphic + Web Design</p>\n                </Grid>\n                <Grid item xs={5} className=\"pair\">\n                    <a target=\"_blank\" href=\"www.madebypair.com\"><img \n                        className=\"thumb\" \n                        src={pairThumb} \n                        alt=\"pair\" \n                        onMouseEnter={e => (e.currentTarget.src=pairThumbGif)}\n                        onMouseLeave={e => (e.currentTarget.src=pairThumb)}/></a>\n                    <a href=\"www.madebypair.com\"><h2>Pair</h2></a>\n                    <p>Brand + Web Design</p>\n                </Grid>\n            </Grid>\n        </Router>\n    )\n}\n\nexport default Projects;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport \"./contact.css\";\n\nconst Contact = () => {\n    return (\n        <Grid container spacing={2} align-items=\"center\" justify=\"center\" id=\"contact\">\n            <Grid item xs={10} className=\"project-page\">\n                <div className=\"title\">\n                    <h1>Contact</h1>\n                </div>\n            </Grid>\n            <Grid item xs={10} className=\"email\">\n                <h2>Got a project?<br/>Drop me a line!</h2>\n                <a href=\"mailto:mptran0101@berkeley.edu\"><h1>mptran0101@berkeley.edu</h1></a>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Contact;\n","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/navbar/Navbar\";\nimport Main from \"./pages/main/Main\";\nimport Projects from \"./pages/projects/Projects\";\nimport Contact from \"./pages/contact/Contact\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"Main\">\n        <Main />\n      </div>\n      <div className=\"Project\">\n        <Projects />\n      </div>\n      <div className=\"Contact\">\n        <Contact />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}